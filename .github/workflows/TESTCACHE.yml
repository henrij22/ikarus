name: TEST
on: [push]
jobs:
  Build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
#          - { waiting until clang fully supports ranges
#            name: "Ubuntu-clang/latest/Debug",
#            config: Debug,
#            compilerC: clang-12,
#            compilerCxx: clang++-12,
#          }
#          - {
#            name: "Ubuntu-clang/latest/Release",
#            config: Release,
#            compilerC: clang-12,
#            compilerCxx: clang++-12,
#          }
#          - {
#            name: "Ubuntu-GCC/latest/Debug",
#            config: Debug,
#            compilerC: gcc-11,
#            compilerCxx: g++-11,
#          }
          - {
            name: "Ubuntu-GCC/latest/Release",
            config: Release,
            compilerC: gcc-11,
            compilerCxx: g++-11,
          }
    steps:
      - uses: actions/checkout@v2
        with:
         path: 'repo'
      - name: Cache matplotplusplus
        uses: actions/cache@v2
        id: cache-matplotplusplus
        env:
          cache-name: cache-matplotplusplus
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ./matplotplusplus
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install matplotplusplus
        if: "${{ steps.cache-matplotplusplus.outputs.cache-hit != 'true'}}"
        run: |
          mkdir matplotplusplus
          cd matplotplusplus
          echo 'cmake_minimum_required(VERSION 3.16)
                project(matplotplusplus)
                include(ExternalProject)
                          ExternalProject_Add(matplotplusplus
                          GIT_REPOSITORY https://github.com/alandefreitas/matplotplusplus.git
                          GIT_TAG master
                          GIT_PROGRESS TRUE
                          CMAKE_ARGS     -DBUILD_EXAMPLES=OFF -DBUILD_TESTS=OFF
                          )' > CMakeLists.txt
          mkdir build
          cd build
          cmake ../  -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles"
          sudo cmake --build . --parallel 9

